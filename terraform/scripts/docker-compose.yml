version: "3.6"

services:
    whoami:
        image: traefik/whoami:v1.6.0
        deploy:
            mode: replicated
            replicas: 1
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.whoami.rule=Path(`/whoami`)
                - traefik.http.routers.whoami.priority=5
                - traefik.http.services.whoami.loadbalancer.server.port=80
        networks:
            - lb_network

    registry:
        image: registry:2
        ports:
            - 5000:5000
        networks:
            - lb_network
        volumes:
            - registry:/var/lib/registry
        deploy:
            mode: replicated
            replicas: 1
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.registry.entrypoints=http
                - traefik.http.routers.registry.rule=PathPrefix(`/v2/`)
                - traefik.http.routers.registry.priority=4
                - traefik.http.services.registry.loadbalancer.server.port=5000

    portainer:
        image: portainer/portainer-ce:2.0.0
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer:/data
        networks:
            - lb_network
        deploy:
            mode: replicated
            replicas: 1
            labels:
                - traefik.enable=true
                - traefik.docker.network=lb_network
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.portainer.entrypoints=http
                - traefik.http.routers.portainer.rule=PathPrefix(`/`)
                - traefik.http.routers.portainer.priority=1
                - traefik.http.services.portainer.loadbalancer.server.port=9000

    traefik:
        image: traefik:v2.3.1
        ports:
            - target: 80
              published: 80
              protocol: tcp
              mode: host
            - target: 443
              published: 443
              protocol: tcp
              mode: host      
        deploy:
            mode: global
            restart_policy:
                condition: on-failure
                max_attempts: 3
                window: 120s
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
        command:
            - --providers.docker
            - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
            - --providers.docker.exposedbydefault=false
            - --providers.docker.swarmmode
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            #- --log.level=INFO
            - --accesslog
            - --log
            - --api
        networks:
            - lb_network

volumes:
  registry:
    driver: s3fs
    name: "oci-registry-$DEPLOY_ID"
  portainer:
    driver: s3fs
    name: "oci-portainer-$DEPLOY_ID"

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  lb_network:
    external: true
    